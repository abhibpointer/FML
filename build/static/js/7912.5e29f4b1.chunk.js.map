{"version":3,"file":"static/js/7912.5e29f4b1.chunk.js","mappings":"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","sources":["routes.js","components/AppBreadcrumb.js","components/AppContent.js","components/AppFooter.js","components/header/LogOut.js","components/header/AppHeaderDropdown.js","components/AppHeader.js","components/AppSidebarNav.js","_nav.js","components/AppSidebar.js","components/DocsCallout.js","components/DocsLink.js","components/DocsExample.js","layout/DefaultLayout.js","util/ProtectedRoutes.js"],"sourcesContent":["import React from 'react'\n\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'))\nconst Colors = React.lazy(() => import('./views/theme/colors/Colors'))\nconst Typography = React.lazy(() => import('./views/theme/typography/Typography'))\n\n// Base\nconst Accordion = React.lazy(() => import('./views/base/accordion/Accordion'))\nconst Breadcrumbs = React.lazy(() => import('./views/base/breadcrumbs/Breadcrumbs'))\nconst Cards = React.lazy(() => import('./views/base/cards/Cards'))\nconst Carousels = React.lazy(() => import('./views/base/carousels/Carousels'))\nconst Collapses = React.lazy(() => import('./views/base/collapses/Collapses'))\nconst ListGroups = React.lazy(() => import('./views/base/list-groups/ListGroups'))\nconst Navs = React.lazy(() => import('./views/base/navs/Navs'))\nconst Paginations = React.lazy(() => import('./views/base/paginations/Paginations'))\nconst Placeholders = React.lazy(() => import('./views/base/placeholders/Placeholders'))\nconst Popovers = React.lazy(() => import('./views/base/popovers/Popovers'))\nconst Progress = React.lazy(() => import('./views/base/progress/Progress'))\nconst Spinners = React.lazy(() => import('./views/base/spinners/Spinners'))\nconst Tables = React.lazy(() => import('./views/base/tables/Tables'))\nconst Tooltips = React.lazy(() => import('./views/base/tooltips/Tooltips'))\n\n// Buttons\nconst Buttons = React.lazy(() => import('./views/buttons/buttons/Buttons'))\nconst ButtonGroups = React.lazy(() => import('./views/buttons/button-groups/ButtonGroups'))\nconst Dropdowns = React.lazy(() => import('./views/buttons/dropdowns/Dropdowns'))\n\n//Forms\nconst ChecksRadios = React.lazy(() => import('./views/forms/checks-radios/ChecksRadios'))\nconst FloatingLabels = React.lazy(() => import('./views/forms/floating-labels/FloatingLabels'))\nconst FormControl = React.lazy(() => import('./views/forms/form-control/FormControl'))\nconst InputGroup = React.lazy(() => import('./views/forms/input-group/InputGroup'))\nconst Layout = React.lazy(() => import('./views/forms/layout/Layout'))\nconst Range = React.lazy(() => import('./views/forms/range/Range'))\nconst Select = React.lazy(() => import('./views/forms/select/Select'))\nconst Validation = React.lazy(() => import('./views/forms/validation/Validation'))\n\nconst Charts = React.lazy(() => import('./views/charts/Charts'))\n\n// Icons\nconst CoreUIIcons = React.lazy(() => import('./views/icons/coreui-icons/CoreUIIcons'))\nconst Flags = React.lazy(() => import('./views/icons/flags/Flags'))\nconst Brands = React.lazy(() => import('./views/icons/brands/Brands'))\n\n// Notifications\nconst Alerts = React.lazy(() => import('./views/notifications/alerts/Alerts'))\nconst Badges = React.lazy(() => import('./views/notifications/badges/Badges'))\nconst Modals = React.lazy(() => import('./views/notifications/modals/Modals'))\nconst Toasts = React.lazy(() => import('./views/notifications/toasts/Toasts'))\n\nconst Widgets = React.lazy(() => import('./views/widgets/Widgets'))\n\n//Banner\nconst Banneradd = React.lazy(()=> import('./views/pages/banner/Addbanner'))\nconst Banneredit = React.lazy(()=> import('./views/pages/banner/Editbanner'))\nconst Bannerlist = React.lazy(()=> import('./views/pages/banner/Listbanner'))\n//Manager list\nconst Managerlist = React.lazy(()=> import('./views/pages/list/Managerlist'))\n//UserList\nconst Userlist = React.lazy(()=> import('./views/pages/list/Userlist'))\n//Add Food Excel\nconst FoodAdd = React.lazy(()=> import('./views/pages/food/FoodAdd'))\n//Add Drink Excel\nconst DrinkAdd = React.lazy(()=> import('./views/pages/drink/DrinkAdd'))\n\nconst ProtectedRoutes =React.lazy(()=> import('./util/ProtectedRoutes'))\n\n \n  const routes =[\n\n    { path: '/bannerlist', exact: true, name: 'Home' },\n    { path: '/dashboard', name: 'Dashboard', element:Dashboard },\n    { path: '/theme', name: 'Theme', element: Colors, exact: true },\n    { path: '/theme/colors', name: 'Colors', element: Colors },\n    { path: '/theme/typography', name: 'Typography', element: Typography },\n    { path: '/base', name: 'Base', element: Cards, exact: true },\n    { path: '/base/accordion', name: 'Accordion', element: Accordion },\n    { path: '/base/breadcrumbs', name: 'Breadcrumbs', element: Breadcrumbs },\n    { path: '/base/cards', name: 'Cards', element: Cards },\n    { path: '/base/carousels', name: 'Carousel', element: Carousels },\n    { path: '/base/collapses', name: 'Collapse', element: Collapses },\n    { path: '/base/list-groups', name: 'List Groups', element: ListGroups },\n    { path: '/base/navs', name: 'Navs', element: Navs },\n    { path: '/base/paginations', name: 'Paginations', element: Paginations },\n    { path: '/base/placeholders', name: 'Placeholders', element: Placeholders },\n    { path: '/base/popovers', name: 'Popovers', element: Popovers },\n    { path: '/base/progress', name: 'Progress', element: Progress },\n    { path: '/base/spinners', name: 'Spinners', element: Spinners },\n    { path: '/base/tables', name: 'Tables', element: Tables },\n    { path: '/base/tooltips', name: 'Tooltips', element: Tooltips },\n    { path: '/buttons', name: 'Buttons', element: Buttons, exact: true },\n    { path: '/buttons/buttons', name: 'Buttons', element: Buttons },\n    { path: '/buttons/dropdowns', name: 'Dropdowns', element: Dropdowns },\n    { path: '/buttons/button-groups', name: 'Button Groups', element: ButtonGroups },\n    { path: '/charts', name: 'Charts', element: Charts },\n    { path: '/forms', name: 'Forms', element: FormControl, exact: true },\n    { path: '/forms/form-control', name: 'Form Control', element: FormControl },\n    { path: '/forms/select', name: 'Select', element: Select },\n    { path: '/forms/checks-radios', name: 'Checks & Radios', element: ChecksRadios },\n    { path: '/forms/range', name: 'Range', element: Range },\n    { path: '/forms/input-group', name: 'Input Group', element: InputGroup },\n    { path: '/forms/floating-labels', name: 'Floating Labels', element: FloatingLabels },\n    { path: '/forms/layout', name: 'Layout', element: Layout },\n    { path: '/forms/validation', name: 'Validation', element: Validation },\n    { path: '/icons', exact: true, name: 'Icons', element: CoreUIIcons },\n    { path: '/icons/coreui-icons', name: 'CoreUI Icons', element: CoreUIIcons },\n    { path: '/icons/flags', name: 'Flags', element: Flags },\n    { path: '/icons/brands', name: 'Brands', element: Brands },\n    { path: '/notifications', name: 'Notifications', element: Alerts, exact: true },\n    { path: '/notifications/alerts', name: 'Alerts', element: Alerts },\n    { path: '/notifications/badges', name: 'Badges', element: Badges },\n    { path: '/notifications/modals', name: 'Modals', element: Modals },\n    { path: '/notifications/toasts', name: 'Toasts', element: Toasts },\n    { path: '/widgets', name: 'Widgets', element: Widgets },\n    \n    //Banner opration Routes\n    {path: '/addbanner', name:'Add', element:Banneradd},\n    {path: '/editbanner/:id', name:'Edit', element:Banneredit},\n    {path: '/bannerlist', name:'Banners', element:Bannerlist},\n  \n    //Manager List Route\n    {path: '/managerlist', name:'Manager list', element:Managerlist},\n  \n    // // User List Route\n    // {path:'/userlist', name:\"User list\", element:Userlist},\n  \n    //Food \n    {path: '/addfood', name:'Add food excel', element:FoodAdd},\n  \n    //Drink\n    {path:'/adddrink', name:'Add drink excel', element:DrinkAdd},\n  \n  ]\n\n\nexport default routes\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport routes from '../routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute ? currentRoute.name : false\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      const routeName = getRouteName(currentPathname, routes)\n      routeName &&\n        breadcrumbs.push({\n          pathname: currentPathname,\n          name: routeName,\n          active: index + 1 === array.length ? true : false,\n        })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2\">\n      <CBreadcrumbItem href=\"/\">Home</CBreadcrumbItem>\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        )\n      })}\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\nimport ProtectedRoutes from 'src/util/ProtectedRoutes'\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          <Route element={<ProtectedRoutes />}>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route \n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n          {/* <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} /> */}\n          </Route> \n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst AppFooter = () => {\n  return (\n    <CFooter>\n      <div>\n        <a href=\"a\" target=\"_blank\" rel=\"noopener noreferrer\">\n          F.M.L\n        </a>\n        <span className=\"ms-1\">&copy; 2022 Created.</span>\n      </div>\n      <div className=\"ms-auto\">\n        <span className=\"me-1\">Powered by</span>\n        <a href=\"https://bpointer.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Bpointer Private Limited\n        </a>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nfunction LogOut() {\n  const nevigate = useNavigate()\n\n  const logout = () => {\n    localStorage.clear();\n    nevigate('/login');\n  }\n  return (\n    <div>\n      <button className=\"btn btn-danger\" onClick={logout}>\n        LogOut\n      </button>\n    </div>\n  )\n}\nexport default LogOut\n","import React from 'react'\nimport {\n  CAvatar,\n  CBadge,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from '@coreui/react'\nimport {\n  cilBell,\n  cilCreditCard,\n  cilCommentSquare,\n  cilEnvelopeOpen,\n  cilFile,\n  cilLockLocked,\n  cilSettings,\n  cilTask,\n  cilUser,\n} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\n\nimport avatar8 from './../../assets/images/avatars/8.jpg'\nimport LogOut from './LogOut'\n\nconst AppHeaderDropdown = () => {\n  \n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n        <CAvatar src={avatar8} size=\"md\" />\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        {/* <CDropdownHeader className=\"bg-light fw-semibold py-2\">Account</CDropdownHeader>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilBell} className=\"me-2\" />\n          Updates\n          <CBadge color=\"info\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilEnvelopeOpen} className=\"me-2\" />\n          Messages\n          <CBadge color=\"success\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilTask} className=\"me-2\" />\n          Tasks\n          <CBadge color=\"danger\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilCommentSquare} className=\"me-2\" />\n          Comments\n          <CBadge color=\"warning\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownHeader className=\"bg-light fw-semibold py-2\">Settings</CDropdownHeader>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilUser} className=\"me-2\" />\n          Profile\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilSettings} className=\"me-2\" />\n          Settings\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilCreditCard} className=\"me-2\" />\n          Payments\n          <CBadge color=\"secondary\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilFile} className=\"me-2\" />\n          Projects\n          <CBadge color=\"primary\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>\n        <CDropdownDivider /> */}\n        <CDropdownItem>\n           <LogOut/>\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n}\n\nexport default AppHeaderDropdown\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilBell, cilEnvelopeOpen, cilList, cilMenu } from '@coreui/icons'\n\nimport { AppBreadcrumb } from './index'\nimport { AppHeaderDropdown } from './header/index'\nimport { logo } from 'src/assets/brand/logo'\n\nconst AppHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4\">\n      <CContainer >\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          {/* <CIcon icon={cilMenu} size=\"lg\" /> */}\n        </CHeaderToggler>\n        {/* <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n          <CIcon icon={logo} height={48} alt=\"Logo\" />\n        </CHeaderBrand> */}\n        {/* <CHeaderNav className=\"d-none d-md-flex me-auto\">\n          <CNavItem>\n            <CNavLink to=\"#\" component={NavLink}>\n              Dashboard\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">Users</CNavLink> \n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">Settings</CNavLink>\n          </CNavItem>\n        </CHeaderNav> */}\n        {/* <CHeaderNav>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilBell} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilList} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilEnvelopeOpen} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n        </CHeaderNav> */}\n        <CHeaderNav style={{display: 'flex', justifyContent: 'flex-end'}}>\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>\n      <CHeaderDivider />\n      <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilBell,\n  cilCalculator,\n  cilChartPie,\n  cilCursor,\n  cilDescription,\n  cilDrop,\n  cilNotes,\n  cilPencil,\n  cilPuzzle,\n  cilSpeedometer,\n  cilStar,\n} from '@coreui/icons'\nimport { CNavGroup, CNavItem, CNavTitle } from '@coreui/react'\n\nconst _nav = [\n\n  // {\n  //   component:CNavItem,\n  //   to:'/util',\n  //   item:[\n  //     {\n  //       component: CNavTitle,\n  //       name: 'Banner',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Banner',\n  //       to: '/pages/banner/Listbanner',\n  //       icon: <CIcon icon={cilPencil} customClassName=\"nav-icon\" />,\n  //     },\n  //   ]\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Login',\n  //   to: '/login',\n  // },\n\n  // {\n  //   component: CNavItem,\n  //   name: 'Dashboard',\n  //   to: '/dashboard1',\n  //   icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n  // },\n  // {\n  //   component: CNavTitle,\n  //   name: 'Banner',\n  // },\n  {\n    component: CNavItem,\n    name: 'Banners',\n    to: '/bannerlist',\n    //  icon: <CIcon icon={cilPencil} customClassName=\"nav-icon\" />,\n  },\n  {\n   component: CNavItem,\n   name:'Manager list',\n   to:'/managerlist'\n  },\n  // {\n  //  component:CNavItem,\n  //  name:'User list',\n  //  to:'/userlist'\n  // },\n  {\n   component:CNavItem,\n   name:'Add food excel',\n   to:'/addfood'\n  },\n\n  {\n    component:CNavItem,\n    name:'Add drink excel',\n    to:'/adddrink'\n   },\n  // {\n  //   component: CNavTitle,\n  //   name: 'Components',\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Base',\n  //   to: '/base',\n  //   icon: <CIcon icon={cilPuzzle} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Accordion',\n  //       to: '/base/accordion',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Breadcrumb',\n  //       to: '/base/breadcrumbs',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Cards',\n  //       to: '/base/cards',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Carousel',\n  //       to: '/base/carousels',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Collapse',\n  //       to: '/base/collapses',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'List group',\n  //       to: '/base/list-groups',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Navs & Tabs',\n  //       to: '/base/navs',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Pagination',\n  //       to: '/base/paginations',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Placeholders',\n  //       to: '/base/placeholders',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Popovers',\n  //       to: '/base/popovers',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Progress',\n  //       to: '/base/progress',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Spinners',\n  //       to: '/base/spinners',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Tables',\n  //       to: '/base/tables',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Tooltips',\n  //       to: '/base/tooltips',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Buttons',\n  //   to: '/buttons',\n  //   icon: <CIcon icon={cilCursor} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Buttons',\n  //       to: '/buttons/buttons',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Buttons groups',\n  //       to: '/buttons/button-groups',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Dropdowns',\n  //       to: '/buttons/dropdowns',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Forms',\n  //   icon: <CIcon icon={cilNotes} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Form Control',\n  //       to: '/forms/form-control',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Select',\n  //       to: '/forms/select',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Checks & Radios',\n  //       to: '/forms/checks-radios',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Range',\n  //       to: '/forms/range',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Input Group',\n  //       to: '/forms/input-group',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Floating Labels',\n  //       to: '/forms/floating-labels',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Layout',\n  //       to: '/forms/layout',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Validation',\n  //       to: '/forms/validation',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Charts',\n  //   to: '/charts',\n  //   icon: <CIcon icon={cilChartPie} customClassName=\"nav-icon\" />,\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Icons',\n  //   icon: <CIcon icon={cilStar} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'CoreUI Free',\n  //       to: '/icons/coreui-icons',\n  //       badge: {\n  //         color: 'success',\n  //         text: 'NEW',\n  //       },\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'CoreUI Flags',\n  //       to: '/icons/flags',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'CoreUI Brands',\n  //       to: '/icons/brands',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Notifications',\n  //   icon: <CIcon icon={cilBell} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Alerts',\n  //       to: '/notifications/alerts',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Badges',\n  //       to: '/notifications/badges',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Modal',\n  //       to: '/notifications/modals',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Toasts',\n  //       to: '/notifications/toasts',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Widgets',\n  //   to: '/widgets',\n  //   icon: <CIcon icon={cilCalculator} customClassName=\"nav-icon\" />,\n  //   badge: {\n  //     color: 'info',\n  //     text: 'NEW',\n  //   },\n  // },\n  // {\n  //   component: CNavTitle,\n  //   name: 'Extras',\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Pages',\n  //   // icon: <CIcon icon={cilStar} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Login',\n  //       to: '/login',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Register',\n  //       to: '/register',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Error 404',\n  //       to: '/404',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Error 500',\n  //       to: '/500',\n  //     },\n  //   ],\n  // },\n\n ]\n\nexport default _nav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { CAvatar, CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport  fmlLogo  from 'src/assets/brand/bbq_logo.png'\n// import { sygnet } from 'src/assets/brand/sygnet'\n\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\n// sidebar nav config\nimport navigation from '../_nav'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\">\n        <img src={fmlLogo} style={{width:'75px', height:'30px',backgroundColor:'#3c4b64', display:'flex', justifyContent:'left'}}/>\n      </CSidebarBrand>\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>  \n      <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n      />\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CCallout, CLink } from '@coreui/react'\n\nconst DocsCallout = (props) => {\n  const { content, href, name } = props\n\n  const plural = name.slice(-1) === 's' ? true : false\n\n  const _href = `https://coreui.io/react/docs/${href}`\n\n  return (\n    <CCallout color=\"info\" className=\"bg-white\">\n      {content\n        ? content\n        : `A React ${name} component ${\n            plural ? 'have' : 'has'\n          } been created as a native React.js version\n      of Bootstrap ${name}. ${name} ${plural ? 'are' : 'is'} delivered with some new features,\n      variants, and unique design that matches CoreUI Design System requirements.`}\n      <br />\n      <br />\n      For more information please visit our official{' '}\n      <CLink href={_href} target=\"_blank\">\n        documentation of CoreUI Components Library for React.js\n      </CLink>\n      .\n    </CCallout>\n  )\n}\n\nDocsCallout.propTypes = {\n  content: PropTypes.string,\n  href: PropTypes.string,\n  name: PropTypes.string,\n}\n\nexport default React.memo(DocsCallout)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = (props) => {\n  const { href, name, text, ...rest } = props\n\n  const _href = name ? `https://coreui.io/react/docs/components/${name}` : href\n\n  return (\n    <div className=\"float-end\">\n      <CLink\n        {...rest}\n        href={_href}\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n        className=\"card-header-action\"\n      >\n        <small className=\"text-medium-emphasis\">{text || 'docs'}</small>\n      </CLink>\n    </div>\n  )\n}\n\nDocsLink.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n  text: PropTypes.string,\n}\n\nexport default React.memo(DocsLink)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CNav, CNavItem, CNavLink, CTabContent, CTabPane } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilCode, cilMediaPlay } from '@coreui/icons'\n\nconst DocsExample = (props) => {\n  const { children, href } = props\n\n  const _href = `https://coreui.io/react/docs/${href}`\n\n  return (\n    <div className=\"example\">\n      <CNav variant=\"tabs\">\n        <CNavItem>\n          <CNavLink href=\"#\" active>\n            <CIcon icon={cilMediaPlay} className=\"me-2\" />\n            Preview\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink href={_href} target=\"_blank\">\n            <CIcon icon={cilCode} className=\"me-2\" />\n            Code\n          </CNavLink>\n        </CNavItem>\n      </CNav>\n      <CTabContent className=\"rounded-bottom\">\n        <CTabPane className=\"p-3 preview\" visible>\n          {children}\n        </CTabPane>\n      </CTabContent>\n    </div>\n  )\n}\n\nDocsExample.propTypes = {\n  children: PropTypes.node,\n  href: PropTypes.string,\n}\n\nexport default React.memo(DocsExample)\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = () => {\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent />\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n","import React from 'react'\nimport {Route,Outlet, Navigate, Routes} from 'react-router-dom'\nimport {useState, useEffect} from 'react'\n\n// function ProtectedRoutes() {\n  // const[islogin, setIsLogin] = useState('')\n  //  console.log(islogin)\n  // const checkUserToken =()=>{\n  //   const token= localStorage.getItem('auth_token')\n  //   console.log(token)\n  //   if(!token || token==='undefined'){\n  //       setIsLogin(false)\n  //   }else{\n  //   setIsLogin(true)\n  //   }\n  // }\n\n  // useEffect(()=>{\n  //  checkUserToken()\n  // },[islogin])  \n  // return (\n  //   islogin ? <Outlet /> : <Navigate to='/login'/>\n  // )\n\n  function ProtectedRoutes() {\n    const isAuthenticated = localStorage.getItem(\"auth_token\");\n    console.log(\"this\", isAuthenticated);\n    \n    return (\n      \n          isAuthenticated ? <Outlet /> : <Navigate to=\"/login\" />\n    );\n  }\n  \nexport default ProtectedRoutes\n"],"names":["Dashboard","React","Colors","Typography","Accordion","Breadcrumbs","Cards","Carousels","Collapses","ListGroups","Navs","Paginations","Placeholders","Popovers","Progress","Spinners","Tables","Tooltips","Buttons","ButtonGroups","Dropdowns","ChecksRadios","FloatingLabels","FormControl","InputGroup","Layout","Range","Select","Validation","Charts","CoreUIIcons","Flags","Brands","Alerts","path","exact","name","element","AppBreadcrumb","currentLocation","useLocation","pathname","breadcrumbs","location","split","reduce","prev","curr","index","array","currentPathname","routeName","routes","currentRoute","find","route","getRouteName","push","active","length","getBreadcrumbs","className","href","map","breadcrumb","key","AppContent","lg","Suspense","fallback","color","idx","AppFooter","target","rel","nevigate","useNavigate","onClick","localStorage","clear","variant","placement","caret","src","avatar8","size","dispatch","useDispatch","sidebarShow","useSelector","state","position","type","style","display","justifyContent","fluid","AppSidebarNav","items","navLink","icon","badge","text","navItem","item","component","rest","Component","to","NavLink","navGroup","String","toggler","visible","startsWith","CNavItem","AppSidebar","unfoldable","sidebarUnfoldable","onVisibleChange","fmlLogo","width","height","backgroundColor","navigation","DocsCallout","props","content","plural","slice","_href","DocsLink","DocsExample","children","cilMediaPlay","cilCode","isAuthenticated","getItem","console","log"],"sourceRoot":""}