{"version":3,"file":"static/js/1215.a7cff649.chunk.js","mappings":"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","sources":["views/pages/banner/Listbanner.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useNavigate } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport {\n  CAvatar,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\n\nconst Listbanner = () => {\n  // List show data\n  const navigate = useNavigate()\n  const baseUri = 'http://localhost:7777/'\n  const [values, setValues] = useState([])\n  const [message, setMessage] = useState('')\n console.log(values)\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await axios.get('http://localhost:7777/list')\n        const response = result.data.data\n\n        const list = []\n\n        for (let i = 0; i < response.length; i++) {\n          for (let j = 0; j < response[i].banner.length; j++) {\n            var outletBanner = {\n              _id: response[i]._id,\n              outlet_id: response[i].outlet_id,\n              banner: response[i].banner[j],\n            }\n            list.push(outletBanner)\n          }\n        }\n        setValues(list)\n      } catch (error) {\n        setMessage(error.message)\n      }\n    }\n    fetchData()\n  }, [])\n\n  // Delete data start\n  const toDelete = (id) => {\n    axios\n      .delete(`http://localhost:7777/delete/${id}`)\n      .then(() => {\n        setValues(\n          values.filter((val) => {\n            return val._id !== id\n          }),\n        )\n        setMessage('Successfully banner data deleted')\n      })\n      .catch((error) => {\n        console.log(error.message)\n      })\n  }\n  // Delete Data end\n\n  //Navigate to Edit page\n  const handleProcess = (id) => {\n    navigate(`/pages/banner/Editbanner/${id}`)\n  }\n\n  //Date converter\n  const date = (date) => {\n    const dateConverter =format(new Date(date), 'yyyy/MM/dd') \n    return dateConverter\n  }\n\n  return (\n    <>\n    <br />  \n      <div className=\"flex-right\">\n        <Link to=\"/pages/banner/Addbanner\">\n          <button className=\"btn btn-primary btn-lg\" style={{display:'flex', justifyContent:'flex-end '}}> Create </button>\n        </Link>\n      </div>\n      <div />\n      <p className=\"text-medium-emphasis text-center\">{message}</p>\n      <CRow>\n        <CCol xs>\n          <CCard className=\"mb-4\">\n            <CCardBody>\n              <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                <CTableHead color=\"light\">\n                  <CTableRow className=\"text-center\">\n                    <CTableHeaderCell>Sr. No.</CTableHeaderCell>\n                    <CTableHeaderCell>Outlet Id</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">Banner Title</CTableHeaderCell>\n                    <CTableHeaderCell className=\"image\">Image</CTableHeaderCell>\n                    <CTableHeaderCell>Is Active</CTableHeaderCell>\n                    <CTableHeaderCell>Is Fix</CTableHeaderCell>\n                    <CTableHeaderCell>From Date</CTableHeaderCell>\n                    <CTableHeaderCell>To Date</CTableHeaderCell>\n                    <CTableHeaderCell>Action</CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {values &&\n                    values.map((item, index) => (\n                      <CTableRow key={index} className=\"text-center\">\n                        <CTableDataCell>{index + 1}</CTableDataCell>\n                        <CTableDataCell>{item.outlet_id}</CTableDataCell>\n                        <CTableDataCell>{item.banner.banner_title}</CTableDataCell>\n                        <CTableDataCell>\n                          {\n                            <img\n                              src={baseUri + item.banner.image_path}\n                              height=\"40px\"\n                              width=\"40px\"\n                              border-radius=\"5px\"\n                            />\n                          }\n                        </CTableDataCell>\n                        <CTableDataCell>{item.banner.is_active}</CTableDataCell>\n                        <CTableDataCell>{item.banner.is_fix}</CTableDataCell>\n                        <CTableDataCell>{date(item.banner.duration.todate)}</CTableDataCell>\n                        <CTableDataCell>{date(item.banner.duration.fromdate)}</CTableDataCell>\n                        {/* <div> */}\n                        <CTableDataCell>\n                          <div>\n                            <button\n                              className=\"btn btn-info\"\n                              type=\"button\"\n                              onClick={() => handleProcess(item.banner._id)}\n                            >\n                              Edit\n                            </button>{' '}\n                            <button className=\"btn btn-danger\" onClick={() => toDelete(item._id)}>\n                              Delete\n                            </button>\n                          </div>\n                        </CTableDataCell>\n                        {/* </div> */}\n                      </CTableRow>\n                    ))}\n                </CTableBody>\n              </CTable>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Listbanner\n"],"names":["navigate","useNavigate","useState","values","setValues","message","setMessage","console","log","useEffect","fetchData","axios","result","response","data","list","i","length","j","banner","outletBanner","_id","outlet_id","push","date","format","Date","className","to","style","display","justifyContent","xs","align","hover","responsive","color","map","item","index","banner_title","src","image_path","height","width","is_active","is_fix","duration","todate","fromdate","type","onClick","id","then","filter","val","catch","error"],"sourceRoot":""}